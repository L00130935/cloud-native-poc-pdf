buildscript {
	repositories {
		jcenter()
	}
}

plugins {
	id "com.bmuschko.docker-remote-api" version "3.3.2"
	id 'org.springframework.boot' version '2.0.1.RELEASE'
	id "net.saliman.properties" version "1.4.6"
	id "com.patdouble.awsecr" version "0.4.0"
        id "com.bmuschko.nexus" version "2.3.1"
}

/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.container.*

archivesBaseName = 'cloud-native-poc-pdf'
version = "0.1.0"
group = "com.prudential.soc"

sourceCompatibility = 1.9
targetCompatibility = 1.9

bootJar {
    baseName = 'spirit-pdf'
}

repositories {
	jcenter()
        maven {
             url "http://nexus.jx.192.168.99.102.nip.io/repository/maven-releases/"
        }
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile group: 'javax.servlet', name:'javax.servlet-api', version:'4.0.0'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version:'2.3.0'
	compile group: 'org.slf4j', name:'slf4j-api', version:'1.7.25'
	compile group: 'ch.qos.logback', name:'logback-classic', version:'1.2.3'
	
	compile group: 'org.apache.commons', name:'commons-math3', version:'3.6.1'
	compile group: 'org.apache.pdfbox', name:'fontbox', version:'1.8.9'
	compile group: 'org.apache.pdfbox', name:'pdfbox', version:'1.8.9'
	compile group: 'org.jsoup', name:'jsoup', version:'1.11.2'
	compile group: 'io.micrometer', name:'micrometer-registry-prometheus', version:'1.0.5'
        compile group: 'com.prudential.soc', name:'cloud-native-poc-pdf-api', version:'0.1.2'

//	compile project (':cloud-native-poc-pdf-api')
    compile fileTree(dir: 'lib', includes: ['*.jar', '*.zip'])
}

nexus {
  sign = false
  repositoryUrl = 'http://nexus.jx.192.168.99.102.nip.io/repository/maven-releases/'
  snapshotRepositoryUrl = 'http://nexus.jx.192.168.99.102.nip.io/repository/maven-snapshots/'
}

bootJar {
	mainClassName = "${project.'main.class.name'}"
}

docker {
      url = "${project.'docker.url'}"
      certPath = new File("${project.'docker.cert.path'}")

	registryCredentials {
		url = "${project.'docker.registry.credentials.url'}"
	}
}

task copyJar(type: Copy) {
    dependsOn bootJar
    from bootJar // jar created by bootJar
    into "${buildDir}/docker"
}   

//EMG this task will create the Dockerfile used to generate your image, you can customise as required 
task createDockerFile(type: Dockerfile) {  
  dependsOn copyJar
  destFile = project.file('build/docker/Dockerfile')
  from 'openjdk:9-jre'
  maintainer 'pramerica_user <pramerica_user.com>'
  copyFile "${bootJar.archiveName}", '/app/spirit-pdf.jar'
  entryPoint 'java'
  defaultCommand '-jar', '/app/spirit-pdf.jar'  
}

task buildDockerImage(type: DockerBuildImage) {
  dependsOn createDockerFile
  inputDir = createDockerFile.destFile.parentFile
  tags = ["${project.'docker.image.tag.name'}".toString(), "${project.'docker.image.tag.name.latest'}".toString()]
}

task pushDockerImage(type:DockerPushImage) {
	dependsOn buildDockerImage
	imageName = "${project.'docker.image.tag.name'}"
}

task pushLatestDockerImage(type:DockerPushImage) {
	dependsOn pushDockerImage
	imageName = "${project.'docker.image.tag.name.latest'}"
}
